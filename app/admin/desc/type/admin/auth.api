syntax = "v1"

info (
	title   : "Auth服务接口"
	desc    : "用户登录注册相关接口定义"
	author  : "solate"
	version : "v1.0"
)


type (
 
    RegisterReq {
        UserName string `json:"user_name"`
        Password string `json:"password"`
        NickName string `json:"nick_name"`
        Avatar   string `json:"avatar,optional"`
        Phone    string `json:"phone"`
        Email    string `json:"email,optional"`
        Sex      int    `json:"sex,optional"`
    }

    RegisterResp {
        UserID string  `json:"user_id"`
    }

    LoginReq {
		UserName string `json:"username" validate:"required"` // 用户名
		Password string `json:"password" validate:"required"` // 密码
		CaptchaId string `json:"captcha_id" validate:"required"` // 验证码ID
		Captcha string `json:"captcha" validate:"required"` // 验证码
	}

    LoginResp {
        Token    string `json:"token"`
        UserID   string  `json:"user_id"`
        UserName string `json:"user_name"`
        Phone    string `json:"phone"`
        Email    string `json:"email"`
    }

    // LogoutReq {
    //     UserID string  `json:"user_id"`
    // }

    CaptchaResp {
        CaptchaId  string `json:"captcha_id"`  // 验证码ID
        CaptchaUrl string `json:"captcha_url"` // 验证码图片（base64）
    }
)


@server (
    prefix: /admin/api/v1/auth
    group: auth
)
service admin {
    @doc "用户注册"
    @handler Register
    post /register (RegisterReq) returns (RegisterResp)

    @doc "用户登录"
    @handler Login
    post /login (LoginReq) returns (LoginResp)

    @doc "获取验证码"
    @handler GetCaptcha
    get /captcha returns (CaptchaResp)
}


@server (
    prefix: /admin/api/v1/auth
    group: auth
    middleware: AuthMiddleware
)
service admin {
    @doc "用户登出"
    @handler Logout
    post /logout returns (bool)
}
